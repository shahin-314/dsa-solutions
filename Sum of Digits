

### Problem Statement Ko Easy Mein Samjhao
- **Kya Karna Hai:** Tumhe ek number `N` diya jayega (jaise 13 ya 10). Tumhe iske sare digits ka sum nikalna hai (jaise 1 + 3 = 4). Phir us sum ko `N` ki jagah laga do. Yeh process tab tak karo jab tak `N` 10 se chhota na ho jaye. Jab `N` 10 se chhota ho jaye, toh woh final answer hoga.
- **Example Samjho:**
  - Agar `N = 13` hai:
    - Pehla step: 1 + 3 = 4
    - Ab `N = 4` ho gaya, aur 4 < 10 hai, toh ruk jao.
    - Answer: `4`
  - Agar `N = 10` hai:
    - Pehla step: 1 + 0 = 1
    - Ab `N = 1` ho gaya, aur 1 < 10 hai, toh ruk jao.
    - Answer: `1`
  - Agar `N = 3` hai:
    - 3 < 10 hai, toh kuch karne ki zarurat nahi.
    - Answer: `3`
- **Kyun Karna Hai:** Yeh ek fun game hai jisme number ko digits ka sum mein badalte jao jab tak single digit na ho jaye.
- **Constraints:** `N` 1 se 10^9 tak ho sakta hai, aur time limit 1 second hai.

---

### Code Ko Line-by-Line Samjhao
Yeh hai tera code:

```cpp
#include <bits/stdc++.h> 
int sumofDigits(int n)
{
    while (n >= 10) { // Continue until n becomes single digit
        // Comment: Yeh loop tab tak chalega jab tak n 10 se chhota nahi ho jata.
        // Explanation: Jab n 10 ya usse bada hai, tab uske digits ka sum nikalna hai. Jab n < 10 ho jaye (jaise 9, 8), toh ruk jayega.
        // Flow: Agar n = 13 hai, toh loop chalega, lekin n = 3 pe nahi chalega.

        int sum = 0; // Variable to store sum of digits
        // Comment: Yeh har baar naya sum banayega jo digits ka total hoga. Shuru mein 0 rakha kyunki abhi kuch add nahi hua.
        // Explanation: Har iteration mein sum zero se start hoga kyunki naya number ka sum nikalna hai.
        // Flow: sum = 0 jab shuru hota hai.

        while (n > 0) { // Extract digits until n becomes 0
            // Comment: Yeh inner loop n ke sare digits nikalega jab tak n zero nahi ho jata.
            // Explanation: Ek number ko digits mein break karne ke liye use hota hai. Jab n = 0 ho jaye, toh sab digits nikal gaye.
            // Flow: n = 13 se shuru, 1 tak jayega, phir 0 pe rukega.

            int digit = n % 10; // Get the last digit
            // Comment: Yeh n ka last digit nikalta hai (rightmost number). % 10 ka matlab 10 se modulus.
            // Explanation: % 10 se unit's place milta hai. Jaise 13 ka % 10 = 3, 10 ka % 10 = 0.
            // Flow: n=13 → digit=3, n=1 → digit=1.

            sum += digit; // Add digit to sum
            // Comment: Yeh digit ko sum mein add karta hai.
            // Explanation: Har digit ko ek-ek karke sum mein jod do. Jaise 3 add karo, phir 1.
            // Flow: sum=0+3=3, phir sum=3+1=4 (n=13 ke liye).

            n = n / 10; // Remove the last digit
            // Comment: Yeh n ka last digit hata deta hai aur bacha hua number rakhta hai.
            // Explanation: / 10 se number ko 10 se divide karke integer part rakhta hai. Jaise 13 / 10 = 1, 10 / 10 = 1.
            // Flow: n=13 → n=1, n=1 → n=0.

        }

        n = sum; // Update n with the sum of digits
        // Comment: Ab n ko naya sum se replace kar do taaki agla step check ho sake.
        // Explanation: Sum ban gaya, ab usko n mein daal do taaki dekhein 10 se chhota hai ya nahi.
        // Flow: n=4 (13 ke baad), n=1 (10 ke baad).

    }

    return n; // Return the final single digit
    // Comment: Jab n < 10 ho jaye, woh final answer hai aur return kar do.
    // Explanation: Yeh woh number hai jo 10 se chhota hai aur process khatam ho gaya.
    // Flow: 3, 1, 4 jaise values return honge.
}
```

---

### Detailed Dry Run (Example: `n = 13`)
- **Initial State:**
  - `n = 13`

1. **Outer While (n >= 10):**
   - `n = 13` (true)
   - **Inner While (n > 0):**
     - `digit = 13 % 10 = 3`, `sum = 0 + 3 = 3`, `n = 13 / 10 = 1`
     - `digit = 1 % 10 = 1`, `sum = 3 + 1 = 4`, `n = 1 / 10 = 0`
     - `n = 0`, inner loop khatam
   - `n = sum = 4`
   - `n = 4` (< 10), outer loop khatam

- **Return:** `4` (sahi)

---

### Dry Run (Example: `n = 10`)
- **Initial State:**
  - `n = 10`

1. **Outer While (n >= 10):**
   - `n = 10` (true)
   - **Inner While (n > 0):**
     - `digit = 10 % 10 = 0`, `sum = 0 + 0 = 0`, `n = 10 / 10 = 1`
     - `digit = 1 % 10 = 1`, `sum = 0 + 1 = 1`, `n = 1 / 10 = 0`
     - `n = 0`, inner loop khatam
   - `n = sum = 1`
   - `n = 1` (< 10), outer loop khatam

- **Return:** `1` (sahi)

---

### Dry Run (Example: `n = 3`)
- **Initial State:**
  - `n = 3`

1. **Outer While (n >= 10):**
   - `n = 3` (false), loop nahi chalega

- **Return:** `3` (sahi)

---

### Dry Run (Example: `n = 999`)
- **Initial State:**
  - `n = 999`

1. **Outer While (n >= 10):**
   - `n = 999` (true)
   - **Inner While (n > 0):**
     - `digit = 999 % 10 = 9`, `sum = 0 + 9 = 9`, `n = 999 / 10 = 99`
     - `digit = 99 % 10 = 9`, `sum = 9 + 9 = 18`, `n = 99 / 10 = 9`
     - `digit = 9 % 10 = 9`, `sum = 18 + 9 = 27`, `n = 9 / 10 = 0`
     - `n = 0`, inner loop khatam
   - `n = sum = 27`
   - `n = 27` (true)
   - **Inner While (n > 0):**
     - `digit = 27 % 10 = 7`, `sum = 0 + 7 = 7`, `n = 27 / 10 = 2`
     - `digit = 2 % 10 = 2`, `sum = 7 + 2 = 9`, `n = 2 / 10 = 0`
     - `n = 0`, inner loop khatam
   - `n = sum = 9`
   - `n = 9` (< 10), outer loop khatam

- **Return:** `9` (sahi, kyunki 9 + 9 + 9 = 27, phir 2 + 7 = 9)

---

### Pura Flow Ko Easy Mein Samjhao
- **Step 1:** Pehle dekho `n` 10 se bada hai ya nahi. Agar nahi, toh wahi answer hai.
- **Step 2:** Agar `n >= 10` hai, toh:
  - Ek chhota loop chalao jo `n` ke sare digits nikal kar unka sum kare.
  - `n` ko us sum se badlo.
- **Step 3:** Yeh process tab tak karo jab tak `n` 10 se chhota na ho jaye.
- **Step 4:** Jab `n < 10` ho jaye, woh final answer hai.
- **Kyun Kaam Karta Hai:** Har baar `n` ke digits ka sum chhota number deta hai, toh ek point pe single digit ho jayega.

---

### Time aur Space Complexity
- **Time Complexity:** O(log N), kyunki har step mein `n` ke digits kam hote hai.
- **Space Complexity:** O(1), kyunki sirf `sum` aur `digit` variables hai.

---

### Can We Use Built-in Functions?
- **Nahi Zaroori:**
  - Sirf % aur / operators use hue.
  - **Optional:** `to_string(n)` use kar sakte hai digits ke liye:
    ```cpp
    string s = to_string(n);
    int sum = 0;
    for (char c : s) sum += c - '0';
    n = sum;
    ```
  - **Recommended:** Modulo approach simple aur fast hai.

---

### Beginner Tips
- **Practice:** `N = 123` (1+2+3=6) pe try karo.
- **Visualize:** Har step pe `n` aur `sum` paper pe likh ke dekho.
- **Debug:** `n`, `digit`, aur `sum` print kar ke check karo.

Ab samajh aaya na, bro? Problem statement, code ka har line, dry run, aur flow ke saath sab clear ho gaya hoga. Yeh function Coding Ninjas pe submit kar ke test cases pass kar lena. Koi doubt ho toh bol! Kya bolta hai? (Chai abhi garam hai, 02:25 PM IST!)
