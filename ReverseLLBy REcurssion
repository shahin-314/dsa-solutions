#include<bits/stdc++.h>
using namespace std;

class Node
    {
        public:
        int data;
        Node* next;
        
        public:
        Node(int data1 , Node* next1)
        {
            data = data1;
            next = next1;
        }
        
        public:
        Node (int data1)
        {
            data = data1;
            next = nullptr;
        }
    };
        
        
         Node* convertArr2LL (vector<int> &arr) // convert array to LL
    {
        Node* head = new Node (arr[0]);
        Node* mover =  head;
        
        for(int i=1 ; i<arr.size() ; i++)
        {
            Node* temp = new Node(arr[i]);
            mover->next=temp;
            mover = temp;
        }
        return head;
    }
    
    
     void print (Node* head) // prints LL
    {
        while(head!= NULL) // head
        {
            cout<<head ->data << " ";
            head = head -> next;
        }
        cout<<endl;
    }
    
    Node* reverseLLByRecurssive(Node* head)
    {
        if(head == NULL || head -> next == NULL)
        {
            return head;
        }
        
        Node* newHead = reverseLLByRecurssive(head -> next);
        Node* front = head -> next;
        front -> next = head;
        head -> next = NULL;
        
        return newHead;
    }
    
    
    int main() 
{
    vector<int> arr = {12,5,8,9};
    Node* head = convertArr2LL(arr);
    head = reverseLLByRecurssive(head);
    print(head);
    
    /* cout << "Original Linked List: ";
    print(head);

    head = reverseLLByRecursive(head);
    
    cout << "Reversed Linked List: ";
    print(head); */
    
}
